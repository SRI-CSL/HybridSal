
Installation instructions for HybridSAL Relational Abstractor:
---------------------------------------------------------------

(1) Make sure your system has python 2.6 (or newer)
 
    We also use the scipy package of python. So make sure
    it is installed. On Ubuntu, it can be installed using:

      sudo aptitude install python-numpy  
      sudo aptitude install python-scipy  


    NOTE: This will not work on Ubuntu 8.04 (Hardy Heron)
    or older since these Ubuntu distributions do not have 
    python 2.6. It is possible to install a more recent 
    version of python (e.g., pyhton 2.7.2) from the source 
    on such systems. Then installing numpy and scipy from 
    the source is also possible (but it may not be that easy).

   Make sure that java is installed and running.
   In particular, there should be a rt.jar file.
   NOTE: java-6-openjdk/jre/lib/rt.jar seems to be buggy. 
   But java-6-sun/jre/lib/rt.jar works fine.

   To install java6:
      sudo aptitude install sun-java6-bin
   Make sure java points to /usr/lib/jvm/java-6-sun/jre/bin/java

   NOTE: Make sure javac is pointing to a java compiler;
   or jikes is installed.


(2) Run 

    make install

    If there are errors, make sure Step (1) above was performed.


(3) Run 

    make sal2xml

    This will test if the hybridsal2xml is installed properly
    Nothing works if hybridsal2xml is not installed properly


(4) Run 

    make 

    This will test if the relational abstraction is installed properly.
    Running make will automatically create abstractions of the
    files in examples/*.hsal


Additional notes for Macs.
--------------------------
The install script (install.py) tries to search for the correct path to
rt.jar or classes.jar, but it usually fails the path to classes.jar on Mac.
In this case, run the install script as follows:
  python install.py --rtjar <absolute-path/filename.jar>


How to use the relational abstractions?
---------------------------------------

The relational abstraction are written in SAL files, hence
SAL tools can be applied to it.

For example, sal-inf-bmc can be used to perform infinite 
bounded model checking on the SAL files to verify safety
properties or obtain counter examples.

Note: Auxiliary lemmas may be needed.
 In some cases, <filename>.sal.proved contains such
 auxiliary lemmas and the sal command to prove properties.
 Do a "diff <filename>.sal.proved <filename>.sal" to see
 what auxiliary lemmas were added.

sal-inf-bmc and other SAL tools are publicly available
from http://sal.csl.sri.com/

See README file for more details on how to use the installed tool.

----------------------------------------------------
Author: Ashish Tiwari (tiwari@csl.sri.com)
----------------------------------------------------
