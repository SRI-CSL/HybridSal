% Automatically generated by cybercomposition2hsal
SimplifiedControllersCyberWithProp: CONTEXT = 
BEGIN
min_gear_number_thresh: REAL = 1;
ShiftControllerModeType: TYPE = {gear0,gear4,gear3,lockoutU4,lockoutU3,lockoutD3,lockoutD2,lockoutD1,gear2,gear1,lockoutU2};
min_speed_ratio_thresh: REAL = 1;
triggeredTrapezoidModeType: TYPE = {High,Falling,Rising,Low};


TorqueConverter: MODULE =
 BEGIN
  INPUT gear_selected: INTEGER
  INPUT input_speed_torque_converter: REAL
  INPUT output_speed_torque_converter: REAL
  INPUT acceleratorPedalPosition: REAL
  OUTPUT lockup_torque_converter: REAL
  LOCAL sample_period: REAL
  LOCAL y: REAL
  LOCAL fall_step: REAL
  LOCAL rise_step: REAL
  LOCAL offset: REAL
  LOCAL fall_time: REAL
  LOCAL rise_time: REAL
  LOCAL amplitude: REAL
  LOCAL triggeredTrapezoidMode: triggeredTrapezoidModeType
  LOCAL lid2D0: BOOLEAN
  LOCAL lid356: BOOLEAN
  LOCAL lid3DC: BOOLEAN
  LOCAL pedal_disable_thresh: REAL
  LOCAL pedal_enable_thresh: REAL
  INITIALIZATION
    amplitude = 1.0;
    y = 0.0;
    pedal_disable_thresh = 0.85;
    fall_step = amplitude / (fall_time / sample_period);
    triggeredTrapezoidMode = Low;
    rise_step = amplitude / (rise_time / sample_period);
    lid356 = FALSE;
    offset = 0.0;
    pedal_enable_thresh = 0.8;
    fall_time = 0.2;
    rise_time = 0.2;
    lid3DC = FALSE;
    lid2D0 = FALSE;
  TRANSITION
  [
   triggeredTrapezoidMode = High
    AND NOT(((min_speed_ratio_thresh > (output_speed_torque_converter * input_speed_torque_converter)) AND ((output_speed_torque_converter >= 100.0) AND (lid3DC OR (output_speed_torque_converter > 110.0))) AND (min_gear_number_thresh >= gear_selected) AND (NOT((acceleratorPedalPosition >= 0.8) AND (lid356 OR (acceleratorPedalPosition > 0.85)))) AND ((acceleratorPedalPosition >= 0.01) AND (lid2D0 OR (acceleratorPedalPosition > 0.02)))) = false)
    AND output_speed_torque_converter >= 1.0 -->
    lid356' = (acceleratorPedalPosition >= 0.8) AND (lid356 OR (acceleratorPedalPosition > 0.85));
    lockup_torque_converter' = y';
    y' = amplitude + offset;
    lid3DC' = (output_speed_torque_converter >= 100.0) AND (lid3DC OR (output_speed_torque_converter > 110.0));
    lid2D0' = (acceleratorPedalPosition >= 0.01) AND (lid2D0 OR (acceleratorPedalPosition > 0.02));
  []
   triggeredTrapezoidMode = High
    AND NOT(((min_speed_ratio_thresh > (1.0 * input_speed_torque_converter)) AND ((1.0 >= 100.0) AND (lid3DC OR (1.0 > 110.0))) AND (min_gear_number_thresh >= gear_selected) AND (NOT((acceleratorPedalPosition >= 0.8) AND (lid356 OR (acceleratorPedalPosition > 0.85)))) AND ((acceleratorPedalPosition >= 0.01) AND (lid2D0 OR (acceleratorPedalPosition > 0.02)))) = false)
    AND output_speed_torque_converter <= 1.0 -->
    lid356' = (acceleratorPedalPosition >= 0.8) AND (lid356 OR (acceleratorPedalPosition > 0.85));
    lockup_torque_converter' = y';
    y' = amplitude + offset;
    lid3DC' = (1.0 >= 100.0) AND (lid3DC OR (1.0 > 110.0));
    lid2D0' = (acceleratorPedalPosition >= 0.01) AND (lid2D0 OR (acceleratorPedalPosition > 0.02));
  []
   triggeredTrapezoidMode = Falling
    AND NOT(((min_speed_ratio_thresh > (output_speed_torque_converter * input_speed_torque_converter)) AND ((output_speed_torque_converter >= 100.0) AND (lid3DC OR (output_speed_torque_converter > 110.0))) AND (min_gear_number_thresh >= gear_selected) AND (NOT((acceleratorPedalPosition >= 0.8) AND (lid356 OR (acceleratorPedalPosition > 0.85)))) AND ((acceleratorPedalPosition >= 0.01) AND (lid2D0 OR (acceleratorPedalPosition > 0.02)))) = true)
    AND NOT(y <= offset)
    AND output_speed_torque_converter >= 1.0 -->
    lid356' = (acceleratorPedalPosition >= 0.8) AND (lid356 OR (acceleratorPedalPosition > 0.85));
    lockup_torque_converter' = y';
    y' = y - fall_step;
    lid3DC' = (output_speed_torque_converter >= 100.0) AND (lid3DC OR (output_speed_torque_converter > 110.0));
    lid2D0' = (acceleratorPedalPosition >= 0.01) AND (lid2D0 OR (acceleratorPedalPosition > 0.02));
  []
   triggeredTrapezoidMode = Falling
    AND NOT(((min_speed_ratio_thresh > (1.0 * input_speed_torque_converter)) AND ((1.0 >= 100.0) AND (lid3DC OR (1.0 > 110.0))) AND (min_gear_number_thresh >= gear_selected) AND (NOT((acceleratorPedalPosition >= 0.8) AND (lid356 OR (acceleratorPedalPosition > 0.85)))) AND ((acceleratorPedalPosition >= 0.01) AND (lid2D0 OR (acceleratorPedalPosition > 0.02)))) = true)
    AND NOT(y <= offset)
    AND output_speed_torque_converter <= 1.0 -->
    lid356' = (acceleratorPedalPosition >= 0.8) AND (lid356 OR (acceleratorPedalPosition > 0.85));
    lockup_torque_converter' = y';
    y' = y - fall_step;
    lid3DC' = (1.0 >= 100.0) AND (lid3DC OR (1.0 > 110.0));
    lid2D0' = (acceleratorPedalPosition >= 0.01) AND (lid2D0 OR (acceleratorPedalPosition > 0.02));
  []
   triggeredTrapezoidMode = Rising
    AND NOT(y >= (amplitude + offset))
    AND NOT(((min_speed_ratio_thresh > (output_speed_torque_converter * input_speed_torque_converter)) AND ((output_speed_torque_converter >= 100.0) AND (lid3DC OR (output_speed_torque_converter > 110.0))) AND (min_gear_number_thresh >= gear_selected) AND (NOT((acceleratorPedalPosition >= 0.8) AND (lid356 OR (acceleratorPedalPosition > 0.85)))) AND ((acceleratorPedalPosition >= 0.01) AND (lid2D0 OR (acceleratorPedalPosition > 0.02)))) = false)
    AND output_speed_torque_converter >= 1.0 -->
    lid356' = (acceleratorPedalPosition >= 0.8) AND (lid356 OR (acceleratorPedalPosition > 0.85));
    lockup_torque_converter' = y';
    y' = y + rise_step;
    lid3DC' = (output_speed_torque_converter >= 100.0) AND (lid3DC OR (output_speed_torque_converter > 110.0));
    lid2D0' = (acceleratorPedalPosition >= 0.01) AND (lid2D0 OR (acceleratorPedalPosition > 0.02));
  []
   triggeredTrapezoidMode = Rising
    AND NOT(y >= (amplitude + offset))
    AND NOT(((min_speed_ratio_thresh > (1.0 * input_speed_torque_converter)) AND ((1.0 >= 100.0) AND (lid3DC OR (1.0 > 110.0))) AND (min_gear_number_thresh >= gear_selected) AND (NOT((acceleratorPedalPosition >= 0.8) AND (lid356 OR (acceleratorPedalPosition > 0.85)))) AND ((acceleratorPedalPosition >= 0.01) AND (lid2D0 OR (acceleratorPedalPosition > 0.02)))) = false)
    AND output_speed_torque_converter <= 1.0 -->
    lid356' = (acceleratorPedalPosition >= 0.8) AND (lid356 OR (acceleratorPedalPosition > 0.85));
    lockup_torque_converter' = y';
    y' = y + rise_step;
    lid3DC' = (1.0 >= 100.0) AND (lid3DC OR (1.0 > 110.0));
    lid2D0' = (acceleratorPedalPosition >= 0.01) AND (lid2D0 OR (acceleratorPedalPosition > 0.02));
  []
   triggeredTrapezoidMode = Low
    AND NOT(((min_speed_ratio_thresh > (output_speed_torque_converter * input_speed_torque_converter)) AND ((output_speed_torque_converter >= 100.0) AND (lid3DC OR (output_speed_torque_converter > 110.0))) AND (min_gear_number_thresh >= gear_selected) AND (NOT((acceleratorPedalPosition >= 0.8) AND (lid356 OR (acceleratorPedalPosition > 0.85)))) AND ((acceleratorPedalPosition >= 0.01) AND (lid2D0 OR (acceleratorPedalPosition > 0.02)))) = true)
    AND output_speed_torque_converter >= 1.0 -->
    lid356' = (acceleratorPedalPosition >= 0.8) AND (lid356 OR (acceleratorPedalPosition > 0.85));
    lockup_torque_converter' = y';
    y' = offset;
    lid3DC' = (output_speed_torque_converter >= 100.0) AND (lid3DC OR (output_speed_torque_converter > 110.0));
    lid2D0' = (acceleratorPedalPosition >= 0.01) AND (lid2D0 OR (acceleratorPedalPosition > 0.02));
  []
   triggeredTrapezoidMode = Low
    AND NOT(((min_speed_ratio_thresh > (1.0 * input_speed_torque_converter)) AND ((1.0 >= 100.0) AND (lid3DC OR (1.0 > 110.0))) AND (min_gear_number_thresh >= gear_selected) AND (NOT((acceleratorPedalPosition >= 0.8) AND (lid356 OR (acceleratorPedalPosition > 0.85)))) AND ((acceleratorPedalPosition >= 0.01) AND (lid2D0 OR (acceleratorPedalPosition > 0.02)))) = true)
    AND output_speed_torque_converter <= 1.0 -->
    lid356' = (acceleratorPedalPosition >= 0.8) AND (lid356 OR (acceleratorPedalPosition > 0.85));
    lockup_torque_converter' = y';
    y' = offset;
    lid3DC' = (1.0 >= 100.0) AND (lid3DC OR (1.0 > 110.0));
    lid2D0' = (acceleratorPedalPosition >= 0.01) AND (lid2D0 OR (acceleratorPedalPosition > 0.02));
  [](triggeredTrapezoidMode = High) AND (((min_speed_ratio_thresh > (output_speed_torque_converter * input_speed_torque_converter)) AND ((output_speed_torque_converter >= 100.0) AND (lid3DC OR (output_speed_torque_converter > 110.0))) AND (min_gear_number_thresh >= gear_selected) AND (NOT((acceleratorPedalPosition >= 0.8) AND (lid356 OR (acceleratorPedalPosition > 0.85)))) AND ((acceleratorPedalPosition >= 0.01) AND (lid2D0 OR (acceleratorPedalPosition > 0.02)))) = false) -->
    triggeredTrapezoidMode' = Falling
  [](triggeredTrapezoidMode = Rising) AND (y >= (amplitude + offset)) -->
    triggeredTrapezoidMode' = High;
    y' = amplitude + offset
  [](triggeredTrapezoidMode = Falling) AND (((min_speed_ratio_thresh > (output_speed_torque_converter * input_speed_torque_converter)) AND ((output_speed_torque_converter >= 100.0) AND (lid3DC OR (output_speed_torque_converter > 110.0))) AND (min_gear_number_thresh >= gear_selected) AND (NOT((acceleratorPedalPosition >= 0.8) AND (lid356 OR (acceleratorPedalPosition > 0.85)))) AND ((acceleratorPedalPosition >= 0.01) AND (lid2D0 OR (acceleratorPedalPosition > 0.02)))) = true) -->
    triggeredTrapezoidMode' = Rising
  [](triggeredTrapezoidMode = Rising) AND (((min_speed_ratio_thresh > (output_speed_torque_converter * input_speed_torque_converter)) AND ((output_speed_torque_converter >= 100.0) AND (lid3DC OR (output_speed_torque_converter > 110.0))) AND (min_gear_number_thresh >= gear_selected) AND (NOT((acceleratorPedalPosition >= 0.8) AND (lid356 OR (acceleratorPedalPosition > 0.85)))) AND ((acceleratorPedalPosition >= 0.01) AND (lid2D0 OR (acceleratorPedalPosition > 0.02)))) = false) -->
    triggeredTrapezoidMode' = Falling
  [](triggeredTrapezoidMode = Low) AND (((min_speed_ratio_thresh > (output_speed_torque_converter * input_speed_torque_converter)) AND ((output_speed_torque_converter >= 100.0) AND (lid3DC OR (output_speed_torque_converter > 110.0))) AND (min_gear_number_thresh >= gear_selected) AND (NOT((acceleratorPedalPosition >= 0.8) AND (lid356 OR (acceleratorPedalPosition > 0.85)))) AND ((acceleratorPedalPosition >= 0.01) AND (lid2D0 OR (acceleratorPedalPosition > 0.02)))) = true) -->
    triggeredTrapezoidMode' = Rising
  [](triggeredTrapezoidMode = Falling) AND (y <= offset) -->
    triggeredTrapezoidMode' = Low;
    y' = offset
  ]
 END;

TorqueReductionSignal: MODULE =
 BEGIN
  INPUT shifting: BOOLEAN
  OUTPUT torque_reduction: REAL
  LOCAL offset: REAL
  LOCAL sample_period: REAL
  LOCAL rise_time: REAL
  LOCAL fall_time: REAL
  LOCAL amplitude: REAL
  LOCAL dummy: REAL
  LOCAL y: REAL
  LOCAL fall_step: REAL
  LOCAL rise_step: REAL
  LOCAL triggeredTrapezoidMode: triggeredTrapezoidModeType
  INITIALIZATION
    fall_step = amplitude / (fall_time / sample_period);
    amplitude = -0.2;
    fall_time = 0.05;
    triggeredTrapezoidMode = Low;
    y = 0.0;
    rise_time = 0.01;
    offset = 1.0;
    rise_step = amplitude / (rise_time / sample_period);
    sample_period = 0.01;
  TRANSITION
  [
   triggeredTrapezoidMode = High
    AND NOT(shifting = false) -->
    y' = amplitude + offset;
    torque_reduction' = y';
  []
   triggeredTrapezoidMode = Falling
    AND NOT(shifting = true)
    AND NOT(y <= offset) -->
    y' = y - fall_step;
    torque_reduction' = y';
  []
   triggeredTrapezoidMode = Rising
    AND NOT(y >= (amplitude + offset))
    AND NOT(shifting = false) -->
    y' = y + rise_step;
    torque_reduction' = y';
  []
   triggeredTrapezoidMode = Low
    AND NOT(shifting = true) -->
    y' = offset;
    torque_reduction' = y';
  [](triggeredTrapezoidMode = High) AND (shifting = false) -->
    triggeredTrapezoidMode' = Falling
  [](triggeredTrapezoidMode = Falling) AND (shifting = true) -->
    triggeredTrapezoidMode' = Rising
  [](triggeredTrapezoidMode = Rising) AND (y >= (amplitude + offset)) -->
    triggeredTrapezoidMode' = High;
    y' = amplitude + offset
  [](triggeredTrapezoidMode = Rising) AND (shifting = false) -->
    triggeredTrapezoidMode' = Falling
  [](triggeredTrapezoidMode = Falling) AND (y <= offset) -->
    triggeredTrapezoidMode' = Low;
    y' = offset
  [](triggeredTrapezoidMode = Low) AND (shifting = true) -->
    triggeredTrapezoidMode' = Rising
  ]
 END;

ShiftController: MODULE =
 BEGIN
  INPUT shift_requested: INTEGER
  INPUT gear: REAL
  INPUT input_speed_torque_converter: REAL
  INPUT output_speed_torque_converter: REAL
  OUTPUT gear_selected: INTEGER
  LOCAL dummy: REAL
  LOCAL lockout_time: REAL
  LOCAL SamplePeriod: REAL
  LOCAL current_time: REAL
  LOCAL ShiftControllerMode: ShiftControllerModeType
  LOCAL top_gear: INTEGER
  LOCAL low_gear: INTEGER
  LOCAL min_shift_timer_extd: REAL
  LOCAL min_shift_timer_std: REAL
  LOCAL sample_period: REAL
  INITIALIZATION
    min_shift_timer_std = 2.0;
    ShiftControllerMode = gear0;
    sample_period = 0.01;
    low_gear = 1.0;
    top_gear = 4.0;
    SamplePeriod = 0.01;
    min_shift_timer_extd = 5.5;
  TRANSITION
  [
   ShiftControllerMode = gear0
    AND NOT((gear = 6.0) OR (gear = 7.0)) -->
    gear_selected' = 0.0;
  []
   ShiftControllerMode = gear4
    AND NOT((shift_requested = 1.0) AND (gear /= 6.0) AND (gear /= 1.0) AND (input_speed_torque_converter > output_speed_torque_converter))
    AND NOT((gear = 6.0) OR (gear = 1.0)) -->
    gear_selected' = 4.0;
  []
   ShiftControllerMode = gear3
    AND NOT((shift_requested = 3.0) AND (gear /= 6.0) AND (gear /= 1.0))
    AND NOT((shift_requested = 1.0) AND (gear /= 6.0) AND (gear /= 1.0) AND (input_speed_torque_converter > output_speed_torque_converter))
    AND NOT((gear = 6.0) OR (gear = 1.0)) -->
    gear_selected' = 3.0;
  []
   ShiftControllerMode = lockoutU4
    AND NOT(current_time >= lockout_time) -->
    current_time' = current_time + SamplePeriod;
  []
   ShiftControllerMode = lockoutU3
    AND NOT(current_time >= lockout_time) -->
    current_time' = current_time + SamplePeriod;
  []
   ShiftControllerMode = lockoutD3
    AND NOT(current_time >= lockout_time) -->
    current_time' = current_time + SamplePeriod;
  []
   ShiftControllerMode = lockoutD2
    AND NOT(current_time >= lockout_time) -->
    current_time' = current_time + SamplePeriod;
  []
   ShiftControllerMode = lockoutD1
    AND NOT(current_time >= lockout_time) -->
    current_time' = current_time + SamplePeriod;
  []
   ShiftControllerMode = gear2
    AND NOT((shift_requested = 3.0) AND (gear /= 6.0) AND (gear /= 1.0))
    AND NOT((shift_requested = 1.0) AND (gear /= 6.0) AND (gear /= 1.0) AND (input_speed_torque_converter > output_speed_torque_converter)) -->
    gear_selected' = 2.0;
  []
   ShiftControllerMode = gear1
    AND NOT((shift_requested = 3.0) AND (gear /= 6.0) AND (gear /= 1.0)) -->
    gear_selected' = 1.0;
  []
   ShiftControllerMode = lockoutU2
    AND NOT(current_time >= lockout_time) -->
    current_time' = current_time + SamplePeriod;
  [](ShiftControllerMode = lockoutU4) AND (current_time >= lockout_time) -->
    ShiftControllerMode' = gear4;
    gear_selected' = 4.0
  [](ShiftControllerMode = gear4) AND ((shift_requested = 1.0) AND (gear /= 6.0) AND (gear /= 1.0) AND (input_speed_torque_converter > output_speed_torque_converter)) -->
    ShiftControllerMode' = lockoutD3;
    current_time' = 0.0
  [](ShiftControllerMode = gear3) AND ((shift_requested = 3.0) AND (gear /= 6.0) AND (gear /= 1.0)) -->
    ShiftControllerMode' = lockoutU4;
    current_time' = 0.0
  [](ShiftControllerMode = lockoutD3) AND (current_time >= lockout_time) -->
    ShiftControllerMode' = gear3;
    gear_selected' = 3.0
  [](ShiftControllerMode = lockoutU3) AND (current_time >= lockout_time) -->
    ShiftControllerMode' = gear3;
    gear_selected' = 3.0
  [](ShiftControllerMode = gear3) AND ((shift_requested = 1.0) AND (gear /= 6.0) AND (gear /= 1.0) AND (input_speed_torque_converter > output_speed_torque_converter)) -->
    ShiftControllerMode' = lockoutD2;
    current_time' = 0.0
  [](ShiftControllerMode = gear2) AND ((shift_requested = 3.0) AND (gear /= 6.0) AND (gear /= 1.0)) -->
    ShiftControllerMode' = lockoutU3;
    current_time' = 0.0
  [](ShiftControllerMode = lockoutD2) AND (current_time >= lockout_time) -->
    ShiftControllerMode' = gear2;
    gear_selected' = 2.0
  [](ShiftControllerMode = gear2) AND ((shift_requested = 1.0) AND (gear /= 6.0) AND (gear /= 1.0) AND (input_speed_torque_converter > output_speed_torque_converter)) -->
    ShiftControllerMode' = lockoutD1;
    current_time' = 0.0
  [](ShiftControllerMode = gear4) AND ((gear = 6.0) OR (gear = 1.0)) -->
    ShiftControllerMode' = lockoutD1;
    current_time' = 0.0
  [](ShiftControllerMode = gear3) AND ((gear = 6.0) OR (gear = 1.0)) -->
    ShiftControllerMode' = lockoutD1;
    current_time' = 0.0
  [](ShiftControllerMode = lockoutU2) AND (current_time >= lockout_time) -->
    ShiftControllerMode' = gear2;
    gear_selected' = 2.0
  [](ShiftControllerMode = gear1) AND ((shift_requested = 3.0) AND (gear /= 6.0) AND (gear /= 1.0)) -->
    ShiftControllerMode' = lockoutU2;
    current_time' = 0.0
  [](ShiftControllerMode = lockoutD1) AND (current_time >= lockout_time) -->
    ShiftControllerMode' = gear1;
    gear_selected' = 1.0
  [](ShiftControllerMode = gear0) AND ((gear = 6.0) OR (gear = 7.0)) -->
    ShiftControllerMode' = gear1;
    gear_selected' = 1.0
  ]
 END;



AbsenceProperty: THEOREM
  ShiftController |- (X(NOT (gear_selected = 5)) OR X(X(NOT (gear_selected = 5))) OR X(X(X(NOT (gear_selected = 5)))));

END
